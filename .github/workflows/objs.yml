name: Build Objs
on:
  workflow_dispatch:
    inputs:
      ecapture-ref:
        description: 'Enter ecapture ref'
        type: string
        default: "master"
      release-tag:
        description: 'Enter release tag'
        type: string
        required: true
      is-debug:
        description: 'Is debug'
        type: boolean
        default: false
        


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.10'

      - name: Install Compilers
        if: false
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            build-essential \
            pkgconf \
            libelf-dev \
            llvm-14 \
            clang-14 \
            linux-tools-common \
            linux-tools-generic \
            gcc \
            gcc-aarch64-linux-gnu \
            linux-source
          for tool in "clang" "llc" "llvm-strip"
          do
            sudo rm -f /usr/bin/$tool
            sudo ln -s /usr/bin/$tool-14 /usr/bin/$tool
          done
          cd /usr/src
          source_file=$(find . -maxdepth 1 -name "*linux-source*.tar.bz2")
          source_dir=$(echo "$source_file" | sed 's/\.tar\.bz2//g')  
          sudo tar -xf $source_file
          cd $source_dir
          test -f .config || sudo make oldconfig
          sudo make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- prepare V=0
          ls -al /usr/src/$source_dir
        shell: bash

      # Checkout current repo
      - uses: actions/checkout@v4
      

      # Checkout eCapture repo
      - uses: actions/checkout@v4
        with:
          path: "ecapture"
          repository: "gojue/ecapture"
          ref: "${{ inputs.ecapture-ref }}"
          submodules: 'recursive'
          fetch-depth: 0


      - name: List dirs
        run: ls -lah

      - name: Setting up for building objs
        run: bash ./scripts/setup.sh

      - name: Apply patches
        working-directory: ./ecapture
        run: bash ../scripts/remove-includes.sh  

      - name: Build amd64 objs
        working-directory: ./ecapture
        run: |
        
          make -f ../Makefile clean
          make -f ../Makefile env
          
          make -f ../Makefile build-custom

          ls -lah assets

      - name: Build arm64 objs
        working-directory: ./ecapture
        run: |
          
          make -f ../Makefile clean
          make -f ../Makefile env
          
          CROSS_ARCH=arm64 make -f ../Makefile build-custom

          ls -lah assets


      - name: Committing and Pushing new changes
        if: ${{ ! inputs.is-debug }}
        run: |

          cp ecapture/assets/* assets/
          ls -lah assets

          git add .
          
          # release branch
          git commit -m "build eBPF objs"
          git push -u origin "release/${{ inputs.release-tag }}"

          # release tag
          git tag ${{ inputs.release-tag }}
          git push origin ${{ inputs.release-tag }}